### This file was generated by Nexus Schema
### Do not make changes to this file directly


scalar Date

type Event {
  address: String!
  createdAt: Date!
  date: String!
  description: String!
  id: ID!
  image: String
  name: String!
  performers: [String!]!
  slug: String!
  time: String!
  updatedAt: Date!
  user: User!
  userId: String!
  venue: String!
}

type Mutation {
  createEvent(address: String!, date: String!, description: String!, name: String!, performer: String!, time: String!, venue: String!): Event!
  deleteEvent(slug: String!): Event!
  updateEvent(address: String, date: String, description: String, id: String!, image: String, name: String, performer: String, time: String, venue: String): Event!
}

type Pagination {
  currentPage: Int!
  from: Int!
  perPage: Int!
  to: Int!
  total: Int!
  totalPages: Int!
}

type PaginationEvents {
  events: [Event!]!
  pagination: Pagination!
}

type Query {
  getAllEvents: [Event!]!
  getEventById(id: String!): Event!
  getEventBySlug(slug: String!): Event!
  getEventsByKeyword(keyword: String!): [Event!]!
  getLimitedEvents(take: Int!): [Event!]!
  getPaginatedEvents(page: Int = 1, take: Int = 5): PaginationEvents!
  getUserEvents: [Event!]!
}

type User {
  createdAt: Date!
  email: String!
  events: [Event!]!
  firstName: String!
  id: ID!
  lastName: String!
  updatedAt: Date!
}